{"version":3,"sources":["components/AddPartnerButton.js","components/AddPartnerPanel.js","components/PartnerSearch.js","components/Panel.js","components/DelPartnerButton.js","components/EditPartnerButton.js","components/EditPartnerPanel.js","components/CurrentTask.js","components/Partner.js","components/App.js","index.js"],"names":["AddPartnerButton","props","className","onClick","handleOpenAddPanel","AddPartnerPanel","handleAddFormChange","e","setState","target","name","value","render","state","industry","city","country","number","postcode","region","street","email","phone","err","addForm","onSubmit","preventDefault","handleAddNewPartner","htmlFor","id","type","onChange","handleCloseAddPanel","React","Component","PartnerSearch","handleSearchChange","searchValue","handlePartnerSearch","Panel","indexes","searched","addPanelActive","handleShowPartner","partnersList","map","index","key","serachedList","item","searchResult","length","DelPartnerButton","handleDelPartner","EditPartnerButton","handleEditPartner","EditPartnerPanel","editForm","chosen","address","contact","CurrentTask","task","items","itemStatus","status","amount","Partner","isLoaded","undefined","handleOpenEditPartner","editPanelActive","handleCloseEditPanel","current","history","currentPanel","historyPanel","style","fontWeight","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","getIndexesDB","dBRef","child","on","snapshot","val","getPartner","once","partner","actualChosen","newPartner","logo","dBAddNewPartner","alert","Firebase","ref","set","handleOpenEditPanel","dBDelPartner","remove","then","console","log","catch","error","message","filter","toLowerCase","includes","document","querySelector","componentDidMount","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6bee826d.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../style/AddPartnerButton.css'\r\n\r\nconst AddPartnerButton = props => (\r\n    <div className='addNewPartner'>\r\n        <button\r\n            className='newPartner'\r\n            onClick={props.handleOpenAddPanel}\r\n        ><i className=\"fas fa-user-plus\"></i></button>\r\n    </div>\r\n)\r\n\r\nexport default AddPartnerButton\r\n","import React from 'react'\r\nimport '../style/AddPartnerPanel.css'\r\n\r\nclass AddPartnerPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            industry: '',\r\n            city: '',\r\n            country: '',\r\n            number: '',\r\n            postcode: '',\r\n            region: '',\r\n            street: '',\r\n            email: '',\r\n            phone: '',\r\n            err: false\r\n        }\r\n    }\r\n\r\n    handleAddFormChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const { name, industry, city, country, number, postcode, region, street, email, phone, err } = this.state\r\n\r\n        const addForm = <form onSubmit={e => {\r\n            e.preventDefault()\r\n\r\n            if (name === '' || industry === '' || city === '' || country === '' || number === '' || postcode === '' || region === '' || street === '' || email === '' || phone === '') {\r\n                this.setState({\r\n                    err: true\r\n                })\r\n                return\r\n            }\r\n\r\n            this.props.handleAddNewPartner(name, industry, city, country, number, postcode, region, street, email, phone)\r\n        }}>\r\n            <div className=\"company\">\r\n                <div>\r\n                    <label htmlFor='name'>Nazwa firmy:</label><input\r\n                        id='name'\r\n                        name='name'\r\n                        type='text'\r\n                        value={name}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='industry'>Branża:</label><input\r\n                        id='industry'\r\n                        name='industry'\r\n                        type='text'\r\n                        value={industry}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"address\">\r\n                <p>Adres:</p>\r\n                <div>\r\n                    <label htmlFor='street'>Ulica:</label><input\r\n                        id='street'\r\n                        name='street'\r\n                        type='text'\r\n                        value={street}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                    <label htmlFor='number'>Nr.:</label><input\r\n                        id='number'\r\n                        name='number'\r\n                        type='text'\r\n                        value={number}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='postcode'>Kod pocztowy:</label><input\r\n                        id='strpostcodeepostcodeet'\r\n                        name='postcode'\r\n                        type='text'\r\n                        value={postcode}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                    <label htmlFor='city'>Miejscowość:</label><input\r\n                        id='city'\r\n                        name='city'\r\n                        type='text'\r\n                        value={city}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='region'>Województwo:</label><input\r\n                        id='region'\r\n                        name='region'\r\n                        type='text'\r\n                        value={region}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='country'>Kraj:</label><input\r\n                        id='country'\r\n                        name='country'\r\n                        type='text'\r\n                        value={country}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"contact\">\r\n                <p>Kontakt:</p>\r\n                <div>\r\n                    <label htmlFor='phone'>Tel:</label><input\r\n                        id='phone'\r\n                        name='phone'\r\n                        type='text'\r\n                        value={phone}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='email'>E-mail:</label><input\r\n                        id='email'\r\n                        name='email'\r\n                        type='text'\r\n                        value={email}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {err ? <p className='error'>Wszytskie pola muszą zosatć wypełnione</p> : null}\r\n            <button className='add'>Dodaj kontrahenta</button>\r\n        </form>\r\n\r\n        return (\r\n            <div className='addPanel'>\r\n                <div className='closePanel'>\r\n                    <button\r\n                        onClick={this.props.handleCloseAddPanel}\r\n                    ><i className=\"far fa-times-circle\"></i></button>\r\n                </div>\r\n                <p className='addPanelTitle'>Dodaj nowego kontrahenta</p>\r\n                {addForm}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddPartnerPanel","import React from 'react'\r\nimport '../style/PartnerSearch.css'\r\n\r\nclass PartnerSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            searchValue: ''\r\n        }\r\n    }\r\n\r\n    handleSearchChange = e => {\r\n        this.setState({\r\n            searchValue: e.target.value\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault()\r\n                    this.props.handlePartnerSearch(this.state.searchValue)\r\n                }}\r\n                className='partnerSearch'\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.searchValue}\r\n                    onChange={this.handleSearchChange}\r\n                />\r\n                <div className=\"searchButton\">\r\n                    <button><i className=\"fas fa-search\"></i></button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartnerSearch","import React from 'react'\r\nimport '../style/Panel.css'\r\n\r\nimport AddPartnerButton from './AddPartnerButton'\r\nimport AddPartnerPanel from './AddPartnerPanel'\r\nimport PartnerSearch from './PartnerSearch'\r\n\r\nconst Panel = props => {\r\n    const { indexes, searched, addPanelActive, handleOpenAddPanel, handleCloseAddPanel, handleShowPartner, handleAddNewPartner, handlePartnerSearch } = props\r\n\r\n    const partnersList = indexes.map(index => <button\r\n        key={index.id}\r\n        className='partnerButton'\r\n        onClick={() => handleShowPartner(index.id)}\r\n    >{index.name}</button>)\r\n\r\n    const serachedList = searched.map(item => <button\r\n        key={item.id}\r\n        className='partnerButton'\r\n        onClick={() => handleShowPartner(item.id)}\r\n    >{item.name}</button>)\r\n\r\n    const searchResult = <>\r\n        <p>Wyniki wyszukiwania:</p>\r\n        <ul className='searchedList'>\r\n            {serachedList}\r\n        </ul>\r\n    </>\r\n\r\n    return (\r\n        <>\r\n            <PartnerSearch\r\n                handlePartnerSearch={handlePartnerSearch}\r\n            />\r\n            {serachedList.length > 0 ? searchResult : null}\r\n            <ul className='partnersList'>\r\n                {partnersList}\r\n            </ul>\r\n            <AddPartnerButton\r\n                handleOpenAddPanel={handleOpenAddPanel}\r\n            />\r\n            {addPanelActive ? <AddPartnerPanel\r\n                handleCloseAddPanel={handleCloseAddPanel}\r\n                handleAddNewPartner={handleAddNewPartner}\r\n            /> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Panel","import React from 'react'\r\nimport '../style/DelPartnerButton.css'\r\n\r\nconst DelPartnerButton = props => {\r\n    const { id, handleDelPartner } = props\r\n\r\n    return (\r\n        <div className='delPartner'>\r\n            <button\r\n                className='delButton'\r\n                onClick={() => handleDelPartner(id)}\r\n            ><i className=\"fas fa-user-minus\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DelPartnerButton","import React from 'react'\r\nimport '../style/EditPartnerButton.css'\r\n\r\nconst EditPartnerButton = props => {\r\n    const { handleEditPartner } = props\r\n\r\n    return (\r\n        <div className='editPartner'>\r\n            <button\r\n                className='editButton'\r\n                onClick={handleEditPartner}\r\n            ><i className=\"fas fa-user-edit\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPartnerButton","import React from 'react'\r\nimport '../style/AddPartnerPanel.css'\r\n\r\nclass EditPartnerPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.chosen.id,\r\n            name: props.chosen.name,\r\n            industry: props.chosen.industry,\r\n            city: props.chosen.address.city,\r\n            country: props.chosen.address.country,\r\n            number: props.chosen.address.number,\r\n            postcode: props.chosen.address.postcode,\r\n            region: props.chosen.address.region,\r\n            street: props.chosen.address.street,\r\n            email: props.chosen.contact.email,\r\n            phone: props.chosen.contact.phone,\r\n            err: false\r\n        }\r\n    }\r\n\r\n    handleAddFormChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const { id, name, industry, city, country, number, postcode, region, street, email, phone, err } = this.state\r\n\r\n        const editForm = <form onSubmit={e => {\r\n            e.preventDefault()\r\n\r\n            if (name === '' || industry === '' || city === '' || country === '' || number === '' || postcode === '' || region === '' || street === '' || email === '' || phone === '') {\r\n                this.setState({\r\n                    err: true\r\n                })\r\n                return\r\n            }\r\n\r\n            this.props.handleEditPartner(id, name, industry, city, country, number, postcode, region, street, email, phone)\r\n        }}>\r\n            <div className=\"company\">\r\n                <div>\r\n                    <label htmlFor='name'>Nazwa firmy:</label><input\r\n                        id='name'\r\n                        name='name'\r\n                        type='text'\r\n                        value={name}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='industry'>Branża:</label><input\r\n                        id='industry'\r\n                        name='industry'\r\n                        type='text'\r\n                        value={industry}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"address\">\r\n                <p>Adres:</p>\r\n                <div>\r\n                    <label htmlFor='street'>Ulica:</label><input\r\n                        id='street'\r\n                        name='street'\r\n                        type='text'\r\n                        value={street}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                    <label htmlFor='number'>Nr.:</label><input\r\n                        id='number'\r\n                        name='number'\r\n                        type='text'\r\n                        value={number}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='postcode'>Kod pocztowy:</label><input\r\n                        id='strpostcodeepostcodeet'\r\n                        name='postcode'\r\n                        type='text'\r\n                        value={postcode}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                    <label htmlFor='city'>Miejscowość:</label><input\r\n                        id='city'\r\n                        name='city'\r\n                        type='text'\r\n                        value={city}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='region'>Województwo:</label><input\r\n                        id='region'\r\n                        name='region'\r\n                        type='text'\r\n                        value={region}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='country'>Kraj:</label><input\r\n                        id='country'\r\n                        name='country'\r\n                        type='text'\r\n                        value={country}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"contact\">\r\n                <p>Kontakt:</p>\r\n                <div>\r\n                    <label htmlFor='phone'>Tel:</label><input\r\n                        id='phone'\r\n                        name='phone'\r\n                        type='text'\r\n                        value={phone}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='email'>E-mail:</label><input\r\n                        id='email'\r\n                        name='email'\r\n                        type='text'\r\n                        value={email}\r\n                        onChange={this.handleAddFormChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {err ? <p className='error'>Wszytskie pola muszą zosatć wypełnione</p> : null}\r\n            <button className='add'>Edytuj kontrahenta</button>\r\n        </form>\r\n\r\n        return (\r\n            <div className='addPanel'>\r\n                <div className='closePanel'>\r\n                    <button\r\n                        onClick={this.props.handleCloseAddPanel}\r\n                    ><i className=\"far fa-times-circle\"></i></button>\r\n                </div>\r\n                <p className='addPanelTitle'>Edytuj kontrahenta</p>\r\n                {editForm}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EditPartnerPanel","import React from 'react'\r\n\r\nconst CurrentTask = props => {\r\n    const { id, items, status } = props.task\r\n\r\n    let itemStatus = ''\r\n\r\n    switch (status) {\r\n        case 'waiting':\r\n            itemStatus = \"Zlecenie oczekuje na realizację\"\r\n            break\r\n\r\n        case 'executing':\r\n            itemStatus = \"Zlecenie w trakcie realizacji\"\r\n            break\r\n\r\n        case 'sent':\r\n            itemStatus = \"Zlecenie wyłane\"\r\n            break\r\n\r\n        default:\r\n            itemStatus = \"Status zlecenia nieznany\"\r\n            break\r\n    }\r\n\r\n    return (\r\n        <div className='currentTask'>\r\n            <p className='number'>Numer zlecenia: <span>{id}</span></p>\r\n            <p>{items.item} - <span>{items.amount}</span> szt.</p>\r\n            <p>Status zlecenia: {itemStatus}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentTask","import React from 'react'\r\nimport '../style/Partner.css'\r\n\r\nimport DelPartnerButton from './DelPartnerButton'\r\nimport EditPartnerButton from './EditPartnerButton'\r\nimport EditPartnerPanel from './EditPartnerPanel'\r\nimport CurrentTask from './CurrentTask'\r\n\r\nconst Partner = props => {\r\n    let isLoaded = false;\r\n\r\n    if (props.chosen.name !== undefined) isLoaded = true\r\n\r\n    if (isLoaded) {\r\n        const { handleOpenEditPartner, handleDelPartner, editPanelActive, handleEditPartner, handleCloseEditPanel } = props\r\n        const { name, industry, id, current, history } = props.chosen\r\n        const { street, number, postcode, city, country } = props.chosen.address\r\n        const { phone, email } = props.chosen.contact\r\n\r\n        let currentPanel = ''\r\n        if (current !== undefined) {\r\n            currentPanel = <div className='currents'>\r\n                <p>Aktualne zlecenia:</p>\r\n                {current.map(task => <CurrentTask\r\n                    key={task.id}\r\n                    task={task}\r\n                />)}\r\n            </div>\r\n        }\r\n\r\n        let historyPanel = ''\r\n        if (history !== undefined) {\r\n            historyPanel = <div className='currents'>\r\n                <p>Archiwalne zlecenia:</p>\r\n                {history.map(task => <CurrentTask\r\n                    key={task.id}\r\n                    task={task}\r\n                />)}\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='partner'>\r\n                    <div className=\"partnerTitle\">\r\n                        <p>Firma: <span style={{ fontWeight: 'bold' }}>{name}</span></p>\r\n                        <p>Branża: {industry}</p>\r\n                    </div>\r\n                    <div className='info'>\r\n                        <div className=\"address\">\r\n                            <p>Adres:</p>\r\n                            <p>{street} {number}</p>\r\n                            <p>{postcode} {city}</p>\r\n                            <p>{country}</p>\r\n                        </div>\r\n                        <div className=\"contact\">\r\n                            <p>Kontakt:</p>\r\n                            <p><i className=\"fas fa-phone\"></i> {phone}</p>\r\n                            <p><i className=\"fas fa-envelope-open\"></i> {email}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='current'>\r\n                        {current !== undefined ? currentPanel : <p className='noCurrent'>Brak aktualnych zleceń</p>}\r\n                    </div>\r\n                    <div className='history'>\r\n                        {history !== undefined ? historyPanel : <p className='noCurrent'>Brak archiwalnych zleceń</p>}\r\n                    </div>\r\n                </div>\r\n                <DelPartnerButton\r\n                    id={id}\r\n                    handleDelPartner={handleDelPartner}\r\n                />\r\n                <EditPartnerButton\r\n                    handleEditPartner={handleOpenEditPartner}\r\n                />\r\n                {editPanelActive ? <EditPartnerPanel\r\n                    handleEditPartner={handleEditPartner}\r\n                    handleCloseAddPanel={handleCloseEditPanel}\r\n                    chosen={props.chosen}\r\n                /> : null}\r\n            </>\r\n        )\r\n\r\n    } else return (\r\n        null\r\n    )\r\n}\r\n\r\nexport default Partner","import React from 'react';\nimport '../style/App.css';\nimport * as Firebase from 'firebase'\n\nimport Panel from './Panel'\nimport Partner from './Partner'\n\n// ----------------------------------------------------------------\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCbhXKJojKrQGO5Wdm6PKQCUDylj_a-R_k\",\n  authDomain: \"interview-97047.firebaseapp.com\",\n  databaseURL: \"https://interview-97047.firebaseio.com\",\n  projectId: \"interview-97047\",\n  storageBucket: \"interview-97047.appspot.com\",\n  messagingSenderId: \"683128932981\",\n  appId: \"1:683128932981:web:f83a7d4d6df9cf9581863c\"\n};\n\n// ----------------------------------------------------------------\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dBRef = '';\n\n    this.state = {\n      actualChosen: {},\n      indexes: [],\n      searched: [],\n\n      addPanelActive: false,\n      editPanelActive: false\n    }\n  }\n\n  // --------------------------------------------------------------\n  // ---------------------------Get data---------------------------\n\n  getIndexesDB = () => {\n    this.dBRef.child('index').on('value', snapshot => {\n      const indexes = snapshot.val()\n      this.setState({\n        indexes\n      });\n    });\n  }\n\n  getPartner = id => {\n    this.dBRef.child(`/partners/${id}`).once('value', snapshot => {\n      const partner = snapshot.val()\n      this.setState({\n        actualChosen: partner,\n      });\n    });\n  }\n\n  // ---------------------------Add New Partner--------------------\n\n  handleOpenAddPanel = () => {\n    this.setState(() => ({\n      actualChosen: {},\n      addPanelActive: true\n    }))\n  }\n\n  handleCloseAddPanel = () => {\n    this.setState(() => ({\n      addPanelActive: false\n    }))\n  }\n\n  handleAddNewPartner = (name, industry, city, country, number, postcode, region, street, email, phone) => {\n    const newPartner = {\n      id: this.state.indexes.length,\n      name,\n      industry,\n      history: [],\n      current: [],\n      logo: '',\n      address: {\n        city,\n        country,\n        number,\n        postcode,\n        region,\n        street\n      },\n      contact: {\n        email,\n        phone\n      }\n    }\n\n    this.setState(() => ({\n      addPanelActive: false\n    }))\n    this.dBAddNewPartner(newPartner)\n\n    alert(\"Dodano nowego kontrahenta!\")\n  }\n\n  dBAddNewPartner = newPartner => {\n    Firebase.database().ref(`/index/${newPartner.id}`).set({\n      id: newPartner.id,\n      name: newPartner.name\n    });\n    Firebase.database().ref(`/partners/${newPartner.id}`).set(newPartner)\n  }\n\n  // ---------------------------Show Partner-----------------------\n\n  handleShowPartner = id => {\n    this.getPartner(id)\n  }\n\n  // ---------------------------Edit Partner------------------------\n\n  handleOpenEditPanel = () => {\n    this.setState({\n      editPanelActive: true\n    })\n  }\n\n  handleCloseEditPanel = () => {\n    this.setState(() => ({\n      editPanelActive: false\n    }))\n  }\n\n  handleEditPartner = (id, name, industry, city, country, number, postcode, region, street, email, phone) => {\n    const newPartner = {\n      id,\n      name,\n      industry,\n      history: [],\n      current: [],\n      logo: '',\n      address: {\n        city,\n        country,\n        number,\n        postcode,\n        region,\n        street\n      },\n      contact: {\n        email,\n        phone\n      }\n    }\n\n    this.setState(() => ({\n      actualChosen: newPartner,\n      editPanelActive: false\n    }))\n    this.dBAddNewPartner(newPartner)\n\n    alert(`Edytowano kontrahenta: ${newPartner.name}`)\n  }\n\n  // ---------------------------Delete Partner----------------------\n\n  handleDelPartner = id => {\n    this.dBDelPartner(id)\n    this.setState({\n      actualChosen: {}\n    })\n\n    alert(`Edytowano kontrahenta: ${this.state.actualChosen.name}`)\n  }\n\n  dBDelPartner = id => {\n    Firebase.database().ref(`/partners/${id}`).remove()\n      .then(() => {\n        console.log(\"Partner removed \\n\")\n      })\n      .catch(error => {\n        console.log(\"Remove failed: \" + error.message)\n      });\n\n    Firebase.database().ref(`/index/${id}`).remove()\n      .then(() => {\n        console.log(\"Index removed\\n\")\n      })\n      .catch(error => {\n        console.log(\"Remove failed: \" + error.message)\n      });\n  }\n\n  // ---------------------------Search Partner----------------------\n\n  handlePartnerSearch = partner => {\n    if (partner !== '') {\n      console.log(`Szukam ${partner}`)\n      const indexes = [...this.state.indexes]\n      const searched = indexes.filter(index => {\n        const name = index.name.toLowerCase()\n        if (name.includes(partner.toLowerCase())) return true\n        else return false\n      })\n      console.log(searched)\n      if (searched.length > 0) {\n        this.setState({\n          searched\n        })\n      } else {\n        alert(`Nie znaleziono firmy: ${partner}`)\n        document.querySelector('.partnerSearch>input').value = ''\n      }\n\n    } else {\n      this.setState({\n        searched: []\n      })\n    }\n  }\n\n  // ---------------------------------------------------------------\n  // ---------------------------------------------------------------\n\n  componentDidMount = () => {\n    Firebase.initializeApp(firebaseConfig)\n    this.dBRef = Firebase.database().ref('/')\n\n    this.getIndexesDB()\n  }\n\n  render = () => {\n    const { indexes, searched, addPanelActive, actualChosen, editPanelActive } = this.state\n\n    return (\n      <div className='wrap'>\n        <section className=\"panel\">\n          <Panel\n            indexes={indexes}\n            searched={searched}\n            addPanelActive={addPanelActive}\n            handleOpenAddPanel={this.handleOpenAddPanel}\n            handleCloseAddPanel={this.handleCloseAddPanel}\n            handleShowPartner={this.handleShowPartner}\n            handlePartnerSearch={this.handlePartnerSearch}\n            handleAddNewPartner={this.handleAddNewPartner}\n          />\n        </section>\n        <section className='display'>\n          <Partner\n            chosen={actualChosen}\n            editPanelActive={editPanelActive}\n            handleOpenEditPartner={this.handleOpenEditPanel}\n            handleEditPartner={this.handleEditPartner}\n            handleCloseEditPanel={this.handleCloseEditPanel}\n            handleDelPartner={this.handleDelPartner}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}